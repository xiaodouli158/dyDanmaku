{"version":3,"file":"main.js","sources":["../electron/main.ts"],"sourcesContent":["import { app, BrowserWindow, Menu, shell, ipcMain, dialog } from 'electron';\nimport { createRequire } from 'node:module';\nimport { fileURLToPath } from 'node:url';\nimport path from 'node:path';\nimport fs from 'node:fs';\n\nconst require = createRequire(import.meta.url);\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main.js    > Electron main\n// │ └─┬ preload.js > Preload scripts\n// ├─┬ dist\n// │ └── index.html  > Electron renderer\n//\nprocess.env.ROOT = path.join(__dirname, '../..');\nprocess.env.DIST = path.join(process.env.ROOT, 'dist');\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? path.join(process.env.ROOT, 'public')\n  : process.env.DIST;\n\n// Disable GPU Acceleration for Windows 7\nif (process.platform === 'win32') app.disableHardwareAcceleration();\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit();\n  process.exit(0);\n}\n\n// Install \"react devtools\" - commented out for now\n// if (process.env.NODE_ENV === 'development') {\n//   app\n//     .whenReady()\n//     .then(() => import('electron-devtools-installer'))\n//     .then(({ default: installExtension, REACT_DEVELOPER_TOOLS }) =>\n//       installExtension(REACT_DEVELOPER_TOOLS, {\n//         loadExtensionOptions: {\n//           allowFileAccess: true,\n//         },\n//       })\n//     )\n//     .catch((e) => console.error('Failed install extension:', e));\n// }\n\nlet win: BrowserWindow | null = null;\n// Here, you can also use other preload\nconst preload = path.join(__dirname, '../preload.js');\nconst url = process.env.VITE_DEV_SERVER_URL;\nconst indexHtml = path.join(process.env.DIST, 'index.html');\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: '抖音弹幕姬',\n    icon: path.join(process.env.VITE_PUBLIC, 'favicon.ico'),\n    width: 1200,\n    height: 800,\n    minWidth: 800,\n    minHeight: 600,\n    webPreferences: {\n      preload,\n      nodeIntegration: false,\n      contextIsolation: true,\n    },\n  });\n\n  if (url) { // electron-vite-vue#298\n    win.loadURL(url);\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools();\n  } else {\n    win.loadFile(indexHtml);\n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString());\n  });\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith('https:')) shell.openExternal(url);\n    return { action: 'deny' };\n  });\n\n  // Apply electron-updater\n  // update(win);\n}\n\napp.whenReady().then(createWindow);\n\napp.on('window-all-closed', () => {\n  win = null;\n  if (process.platform !== 'darwin') app.quit();\n});\n\napp.on('second-instance', () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore();\n    win.focus();\n  }\n});\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    allWindows[0].focus();\n  } else {\n    createWindow();\n  }\n});\n\n// New window example arg: new windows url\nipcMain.handle('open-win', (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      preload,\n      nodeIntegration: false,\n      contextIsolation: true,\n    },\n  });\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`);\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg });\n  }\n});\n\n// Handle file save dialog\nipcMain.handle('save-file', async (_, data: { content: string; filename: string }) => {\n  try {\n    const result = await dialog.showSaveDialog(win!, {\n      defaultPath: data.filename,\n      filters: [\n        { name: 'JSON Files', extensions: ['json'] },\n        { name: 'All Files', extensions: ['*'] }\n      ]\n    });\n\n    if (!result.canceled && result.filePath) {\n      fs.writeFileSync(result.filePath, data.content, 'utf8');\n      return { success: true, path: result.filePath };\n    }\n    return { success: false, message: 'User cancelled' };\n  } catch (error) {\n    return { success: false, message: error.message };\n  }\n});\n\n// Remove default menu\nMenu.setApplicationMenu(null);\n"],"names":["url"],"mappings":"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"}